<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zoukeqing&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-12T14:30:27.212Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zoukeqing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker入门</title>
    <link href="http://yoursite.com/2018/09/12/docker-started/"/>
    <id>http://yoursite.com/2018/09/12/docker-started/</id>
    <published>2018-09-12T11:21:41.000Z</published>
    <updated>2018-09-12T14:30:27.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>开始之前最好了解<a href="https://www.docker.com/why-docker" target="_blank" rel="noopener">什么是Dockers</a>以及<a href="https://www.docker.com/customers" target="_blank" rel="noopener">为何使用Dockers</a> </p></blockquote><h2 id="什么是Dockers"><a href="#什么是Dockers" class="headerlink" title="什么是Dockers"></a>什么是Dockers</h2><p>将软件打包成标准化单元，用于开发、装运和部署</p><h2 id="为什么要使用Dockers"><a href="#为什么要使用Dockers" class="headerlink" title="为什么要使用Dockers"></a>为什么要使用Dockers</h2><p>了解容器和容器平台之间的差异，解决日益多样化的IT环境所需的条件以及企业在评估解决方案时应该考虑的能力</p><h3 id="对比传统虚拟机总结"><a href="#对比传统虚拟机总结" class="headerlink" title="对比传统虚拟机总结"></a>对比传统虚拟机总结</h3><table><thead><tr><th style="text-align:center">特性</th><th style="text-align:center">容器</th><th style="text-align:center">虚拟机</th></tr></thead><tbody><tr><td style="text-align:center">启动</td><td style="text-align:center">秒级</td><td style="text-align:center">分钟级</td></tr><tr><td style="text-align:center">硬盘容量</td><td style="text-align:center">一般为MB</td><td style="text-align:center">一般为GB</td></tr><tr><td style="text-align:center">效能</td><td style="text-align:center">接近原生</td><td style="text-align:center">比较慢</td></tr><tr><td style="text-align:center">系统支援量</td><td style="text-align:center">单机支持上千个容器</td><td style="text-align:center">一般几十个</td></tr></tbody></table><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>Docker 包括三个基本概念</p><ul><li>镜像（ Image ）</li><li>容器（ Container ）</li><li>仓库（ Repository ）</li></ul><p>理解了这三个概念，就理解了 Docker 的整个生命周期。</p><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>官方网站上都有各种环境下的<a href="https://www.docker.com/get-started" target="_blank" rel="noopener">安装指南</a>，这里就介绍windows 10 pro的安装方法</p><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>Docker for Windows 支持 64 位版本的 Windows 10 Pro，且必须开启 Hyper-V</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>需要windows container建议安装Edge版本的Docker for Windows</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>在 Windows 搜索栏输入 Docker 点击 Docker for Windows ，登陆用户名密码 Get it</p><h2 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h2><p>常见的镜像加速器有：</p><ul><li>Docker 官方提供的中国镜像</li><li>阿里云加速器</li><li>DaoCloud加速器</li></ul><p>这里我选择Docker官方提供的中国加速器，右下加右键Docker图标，选择Settings，接着选择Daemon，在Registry mirrors添加 <a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a></p><h1 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>运行<code>docker --version</code>进行确认</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker --version</span><br><span class="line">Docker version 18.06.1-ce, build e68fc7a</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:           18.06.1-ce</span><br><span class="line"> API version:       1.38</span><br><span class="line"> Go version:        go1.10.3</span><br><span class="line"> Git commit:        e68fc7a</span><br><span class="line"> Built:             Tue Aug 21 17:21:34 2018</span><br><span class="line"> OS/Arch:           windows/amd64</span><br><span class="line"> Experimental:      false</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          18.06.1-ce</span><br><span class="line">  API version:      1.38 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.10.3</span><br><span class="line">  Git commit:       e68fc7a</span><br><span class="line">  Built:            Tue Aug 21 17:29:02 2018</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     true</span><br></pre></td></tr></table></figure><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>拉取镜像并测试环境出现Hello from Docker！说明运行成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker run hello-world</span><br><span class="line">Unable to find image 'hello-world:latest' locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">d1725b59e92d: Pull complete</span><br><span class="line">Digest: sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span> docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><p>此时<code>docker images</code>可以查看镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              4ab4c602aa5e        4 days ago          1.84kB</span><br></pre></td></tr></table></figure><p>此时删除hello-world遇到异常错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker rmi hello-world</span><br><span class="line">Error response from daemon: conflict: unable to remove repository reference &quot;hello-world&quot; (must force) - container 026e29eb7592 is using its referenced image 4ab4c602aa5e</span><br></pre></td></tr></table></figure><p>输入<code>docker ps -a</code>查看容器，或者<code>docker container ls -a</code>也可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                         PORTS               NAMES</span><br><span class="line">026e29eb7592        hello-world         &quot;/hello&quot;            10 minutes ago      Exited (0) 10 minutes ago                          inspiring_bartik</span><br><span class="line">f4d65a6a8b08        hello-world         &quot;/hello&quot;            About an hour ago   Exited (0) About an hour ago                       clever_leakey</span><br><span class="line">G:\Docker&gt;docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                         PORTS               NAMES</span><br><span class="line">026e29eb7592        hello-world         &quot;/hello&quot;            12 minutes ago      Exited (0) 12 minutes ago                          inspiring_bartik</span><br><span class="line">f4d65a6a8b08        hello-world         &quot;/hello&quot;            About an hour ago   Exited (0) About an hour ago</span><br></pre></td></tr></table></figure><p>有两个容器在使用hello-world镜像，那么就删除容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker container rm 026</span><br><span class="line">026</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker container rm f4d</span><br><span class="line">f4d</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br></pre></td></tr></table></figure><p>最后清理所有处于终止状态的容器，避免文件残留。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker container prune</span><br><span class="line">WARNING! This will remove all stopped containers.</span><br><span class="line">Are you sure you want to continue? [y/N] Y</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure><p>最后删除镜像。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker rmi hello-world</span><br><span class="line">Untagged: hello-world:latest</span><br><span class="line">Untagged: hello-world@sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788</span><br><span class="line">Deleted: sha256:4ab4c602aa5eed5528a6620ff18a1dc4faef0e1ab3a5eddeddb410714478c67f</span><br><span class="line">Deleted: sha256:428c97da766c4c13b19088a471de6b622b038f3ae8efa10ec5a37d6d31a2df0b</span><br></pre></td></tr></table></figure><h2 id="用ID、镜像名删除镜像"><a href="#用ID、镜像名删除镜像" class="headerlink" title="用ID、镜像名删除镜像"></a>用ID、镜像名删除镜像</h2><p>这里用ID删除，注意只能<code>删除docker images ls</code>能显示的镜像，只要选前面几个字符就可以删除了，当然也能删除到其它前面几个字符相同的</p><h1 id="创建一个Nginx服务器"><a href="#创建一个Nginx服务器" class="headerlink" title="创建一个Nginx服务器"></a>创建一个Nginx服务器</h1><h2 id="search"><a href="#search" class="headerlink" title="search"></a>search</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker search nginx</span><br><span class="line">NAME                                                   DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">nginx                                                  Official build of Nginx.                        9577                [OK]</span><br><span class="line">jwilder/nginx-proxy                                    Automated Nginx reverse proxy for docker con…   1402                                    [OK]</span><br><span class="line">richarvey/nginx-php-fpm                                Container running Nginx + PHP-FPM capable of…   613                                     [OK]</span><br><span class="line">jrcs/letsencrypt-nginx-proxy-companion                 LetsEncrypt container to use with nginx as p…   405                                     [OK]</span><br><span class="line">kong                                                   Open-source Microservice &amp; API Management la…   224                 [OK]</span><br><span class="line">webdevops/php-nginx                                    Nginx with PHP-FPM                              113                                     [OK]</span><br><span class="line">kitematic/hello-world-nginx                            A light-weight nginx container that demonstr…   108</span><br><span class="line">zabbix/zabbix-web-nginx-mysql                          Zabbix frontend based on Nginx web-server wi…   66                                      [OK]</span><br><span class="line">bitnami/nginx                                          Bitnami nginx Docker Image                      58                                      [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-phpmyadmin-mysql-5   ubuntu-16-nginx-php-phpmyadmin-mysql-5          43                                      [OK]</span><br><span class="line">linuxserver/nginx                                      An Nginx container, brought to you by LinuxS…   39</span><br><span class="line">tobi312/rpi-nginx                                      NGINX on Raspberry Pi / armhf                   20                                      [OK]</span><br><span class="line">blacklabelops/nginx                                    Dockerized Nginx Reverse Proxy Server.          12                                      [OK]</span><br><span class="line">wodby/drupal-nginx                                     Nginx for Drupal container image                10                                      [OK]</span><br><span class="line">nginxdemos/hello                                       NGINX webserver that serves a simple page co…   8                                       [OK]</span><br><span class="line">webdevops/nginx                                        Nginx container                                 8                                       [OK]</span><br><span class="line">centos/nginx-18-centos7                                Platform for running nginx 1.8 or building n…   7</span><br><span class="line">centos/nginx-112-centos7                               Platform for running nginx 1.12 or building …   5</span><br><span class="line">1science/nginx                                         Nginx Docker images that include Consul Temp…   4                                       [OK]</span><br><span class="line">pebbletech/nginx-proxy                                 nginx-proxy sets up a container running ngin…   2                                       [OK]</span><br><span class="line">behance/docker-nginx                                   Provides base OS, patches and stable nginx f…   2                                       [OK]</span><br><span class="line">toccoag/openshift-nginx                                Nginx reverse proxy for Nice running on same…   1                                       [OK]</span><br><span class="line">travix/nginx                                           NGinx reverse proxy                             1                                       [OK]</span><br><span class="line">mailu/nginx                                            Mailu nginx frontend                            1                                       [OK]</span><br><span class="line">ansibleplaybookbundle/nginx-apb                        An APB to deploy NGINX                          0                                       [OK]</span><br></pre></td></tr></table></figure><p>选择官方的那种。。。OFFICIAl为OK表示很官方</p><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">802b00ed6f79: Pull complete</span><br><span class="line">e9d0e0ea682b: Pull complete</span><br><span class="line">d8b7092b9221: Pull complete</span><br><span class="line">Digest: sha256:24a0c4b4a4c0eb97a1aabb8e29f18e917d05abfe1b7a7c07857230879ce7d3d3</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br></pre></td></tr></table></figure><p>latest表示最新的</p><h2 id="启动Nginx服务器"><a href="#启动Nginx服务器" class="headerlink" title="启动Nginx服务器"></a>启动Nginx服务器</h2><h2 id="COMMAND"><a href="#COMMAND" class="headerlink" title="COMMAND"></a>COMMAND</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker run -d -p 80:80 --name webserver nginx</span><br><span class="line">6a4d793e925f9ea4e7c7f4687279d03109ee33814a6dad12cba628cb5933eec4</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">6a4d793e925f        nginx               &quot;nginx -g &apos;daemon of…&quot;   16 seconds ago      Up 15 seconds       0.0.0.0:80-&gt;80/tcp   webserver</span><br></pre></td></tr></table></figure><h2 id="浏览器访问确认"><a href="#浏览器访问确认" class="headerlink" title="浏览器访问确认"></a>浏览器访问确认</h2><p>localhost默认为localhost:80</p><p><img src="https://s1.ax1x.com/2018/09/12/iAksOS.png" alt=""></p><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><p>某些时候需要进入容器进行操作，包括使用 docker attach 命令或 docker exec 命令，推荐<br>大家使用 docker exec 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">G:\Docker&gt;docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">6a4d793e925f        nginx               &quot;nginx -g &apos;daemon of…&quot;   16 seconds ago      Up 15 seconds       0.0.0.0:80-&gt;80/tcp   webserver</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker attach webserver</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker attach 6</span><br><span class="line"></span><br><span class="line">G:\Docker&gt;docker exec -it webserver bash</span><br><span class="line">root@6a4d793e925f:/# cd /usr/share/nginx</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# ls</span><br><span class="line">html</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# cat html</span><br><span class="line">cat: html: Is a directory</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# cd /html</span><br><span class="line">bash: cd: /html: No such file or directory</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# vim html</span><br><span class="line">bash: vim: command not found</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# ls</span><br><span class="line">html</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx# cd html</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# ls</span><br><span class="line">50x.html  index.html</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# vim index.html</span><br><span class="line">bash: vim: command not found</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# vi index.html</span><br><span class="line">bash: vi: command not found</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# cd index.html</span><br><span class="line">bash: cd: index.html: Not a directory</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# echo &quot;&lt;h1&gt;Hello Docker,Hello Nginx !&lt;h1/&gt;&quot; &gt; index.html</span><br><span class="line">bash: !: event not found</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html#  echo &quot;&lt;h1&gt;Hello Docker,Hello Nginx&lt;h1/&gt;&quot; &gt; index.html</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# cat index.html</span><br><span class="line">&lt;h1&gt;Hello Docker,Hello Nginx&lt;h1/&gt;</span><br><span class="line">root@6a4d793e925f:/usr/share/nginx/html# exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>看到熟悉的Linux命令提示符，发现自己有些命令忘了，本人习惯于windows10 pro。。。</p><h2 id="效果。。。"><a href="#效果。。。" class="headerlink" title="效果。。。"></a>效果。。。</h2><p><img src="https://s1.ax1x.com/2018/09/12/iAkry8.png" alt="Hello Docker"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;开始之前最好了解&lt;a href=&quot;https://www.docker.com/why-docker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;什么是Dockers&lt;/a&gt;以及&lt;a href=&quot;https://www.docker.com/customers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;为何使用Dockers&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Dockers&quot;&gt;&lt;a href=&quot;#什么是Dockers&quot; class=&quot;headerlink&quot; title=&quot;什么是Dockers&quot;&gt;&lt;/a&gt;什么是Dockers&lt;/h2&gt;&lt;p&gt;将软件打包成标准化单元，用于开发、装运和部署&lt;/p&gt;
&lt;h2 id=&quot;为什么要使用Dockers&quot;&gt;&lt;a href=&quot;#为什么要使用Dockers&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用Dockers&quot;&gt;&lt;/a&gt;为什么要使用Dockers&lt;/h2&gt;&lt;p&gt;了解容器和容器平台之间的差异，解决日益多样化的IT环境所需的条件以及企业在评估解决方案时应该考虑的能力&lt;/p&gt;
&lt;h3 id=&quot;对比传统虚拟机总结&quot;&gt;&lt;a href=&quot;#对比传统虚拟机总结&quot; class=&quot;headerlink&quot; title=&quot;对比传统虚拟机总结&quot;&gt;&lt;/a&gt;对比传统虚拟机总结&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;特性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;容器&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;虚拟机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;启动&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;秒级&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;分钟级&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;硬盘容量&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;一般为MB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;一般为GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;效能&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;接近原生&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;比较慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;系统支援量&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;单机支持上千个容器&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;一般几十个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Github pages + Hexo 搭建个人博客</title>
    <link href="http://yoursite.com/2018/09/11/github-hexo-blog/"/>
    <id>http://yoursite.com/2018/09/11/github-hexo-blog/</id>
    <published>2018-09-11T01:54:24.000Z</published>
    <updated>2018-09-11T13:02:30.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="准备环境（NodeJS-Git"><a href="#准备环境（NodeJS-Git" class="headerlink" title="准备环境（NodeJS+Git)"></a>准备环境（NodeJS+Git)</h2><ul><li><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">nodejs下载</a>之后，安装路径建议换到除C盘以外的硬盘上，比如我安装在<code>D:\nodejs</code>，其它的就默认next</p></li><li><p>安装结果输入命令测试结果，若出现版本则安装成功了。npm是NodeJS的包管理工具，可安装、卸载、更新、查看、搜索、发布等等。</p></li><li><p>改变环境配置npm的全局模块的存放路径以及cache的路径，提前新建好文件，然后输入以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix <span class="string">"D:\nodejs\Manual_setting\node_global"</span></span><br><span class="line">npm config set cache <span class="string">"D:\nodejs\Manual_setting\node_cache"</span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>设置环境变量，将D:\nodejs\Manual_setting\node_global添加到系统变量path</p></li><li><p>安装淘宝镜像npm (cnpm)<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p><code>cnpm -v</code> 测试结果，cnpm已安装到之前配置好的全局模块</p><p><img src="https://s1.ax1x.com/2018/09/11/ikFjXD.png" alt="cnpm -v"></p></li><li><p>git安装，<a href="https://jingyan.baidu.com/article/020278117cbe921bcc9ce51c.html" target="_blank" rel="noopener">参考百度</a></p></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ul><li><p>全局安装    </p><p>  <code>cnpm install hexo-cli -g</code></p></li><li><p>本地生成博客环境</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init Blog</span><br><span class="line">cd Blog</span><br><span class="line">cnpm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><ul><li><p>浏览器输入</p><p><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p><img src="https://s1.ax1x.com/2018/09/11/ikFLp6.png" alt=""></p></li></ul><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>我选的是NexT</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">git clone git@github.com:theme-next/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure><p>在项目根目录下面修改_config.yml配置文件中的theme属性，将其设置为next</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>现在打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，会看到我们已经应用了一个新的主题</p><p><code>hexo generate</code> 可以简写为 <code>hexo g</code></p><p><code>hexo server</code> 可以间写为 <code>hexo s</code></p><p><code>hexo deloper</code> 可以简写为 <code>hexo d</code></p><h1 id="Github-Pages设置"><a href="#Github-Pages设置" class="headerlink" title="Github Pages设置"></a>Github Pages设置</h1><p>注册Github账号，创建repository，比如我创建 <a href="https://zoukeqing.github.io" target="_blank" rel="noopener">zoukeqing.github.io</a>，不要勾选README.md文件</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h3 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h3><p>我是从阿里云购买 <a href="zoukeqing.top">zoukeqing.top</a> ，当然你通过其它渠道购买也可以，只要能域名解析就行</p><h3 id="Ping-域名"><a href="#Ping-域名" class="headerlink" title="Ping 域名"></a>Ping 域名</h3><pre><code>![ping](https://s1.ax1x.com/2018/09/11/ikFbfx.png)</code></pre><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p><img src="https://s1.ax1x.com/2018/09/11/ikFX6O.png" alt="解析"></p><h2 id="新建CNAME文件"><a href="#新建CNAME文件" class="headerlink" title="新建CNAME文件"></a>新建CNAME文件</h2><p>在 <code>\themes\next\source</code> 目录下新建CNAME文件，无后缀名，加上自己的域名就可以，比如 <a href="zoukeqing.top">zoukeqing.top</a></p><h2 id="hexo-deploy部署"><a href="#hexo-deploy部署" class="headerlink" title="hexo deploy部署"></a>hexo deploy部署</h2><p>在项目根目录下配置文件_config.xml中作如下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:zoukeqing/zoukeqing.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>提前安装一个扩展，用于<code>hexo deloper</code> 命令提交到Github项目中</p><p><code>npm install hexo-deployer-git --save</code></p><p>然后在命令 <code>hexo d</code>执行完成部署，打开Github项目文件就可看到提交上来的静态文件</p><h1 id="MarkDown写作"><a href="#MarkDown写作" class="headerlink" title="MarkDown写作"></a>MarkDown写作</h1><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><ul><li><p>新建一篇文章，会在 <code>\source\_posts</code> 目录下生成 <code>title.md</code> </p><p><code>hexo new &quot;title&quot;</code></p></li><li><p>新建页面，会在 <code>\source\page</code> 目录下生成 <code>index.md</code> </p><p><code>hexo new page &quot;page&quot;</code></p></li><li><p>发表草稿，不会在显示页面</p><p><code>hexo new tra &quot;caogao&quot;</code></p></li><li><p>将草稿发布</p><p><code>hexo public &quot;chage caogao to title&quot;</code></p></li></ul><h2 id="MarkDown编辑器"><a href="#MarkDown编辑器" class="headerlink" title="MarkDown编辑器"></a>MarkDown编辑器</h2><pre><code>[Typora](https://typora.io/#)    [HexoEditor](https://github.com/zhuzhuyule/HexoEditor)</code></pre><h1 id="访问量和文章阅读量"><a href="#访问量和文章阅读量" class="headerlink" title="访问量和文章阅读量"></a>访问量和文章阅读量</h1><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><ul><li><p>将配置文件下的 <code>busuanzi_count</code> 的属性 <code>enable</code> 修改为 <code>true</code> ，如果首页也需要文章阅读量可以选用LeanClound，同时将 <code>page_pv</code> 设置为 <code>false</code></p><p><img src="https://s1.ax1x.com/2018/09/11/ikF7kR.png" alt=""></p></li></ul><h2 id="LeanCloud"><a href="#LeanCloud" class="headerlink" title="LeanCloud"></a><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a></h2><blockquote><p>为什么要用LeanCloud是因为不蒜子存在一个缺点是，不能在首页直接看单篇文章的阅读量</p></blockquote><ul><li><p>创建新应用名为Counter</p></li><li><p>复制 <code>App ID</code>和<code>App Key</code></p></li><li><p>更改<code>主题配置文件</code> 的 <code>leancloud_visitors</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="string">你的id</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="string">你的key</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="设置安全域名"><a href="#设置安全域名" class="headerlink" title="设置安全域名"></a>设置安全域名</h3><blockquote><p>不设置安全域名是看不到数字的，同时也将本地 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 也添加进去，方便本地调试</p></blockquote><p><img src="https://s1.ax1x.com/2018/09/11/ikFHt1.png" alt=""></p><h1 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h1><ul><li><p>提前安装一个扩展</p><p><code>cnpm install --save hexo-generator-search</code></p></li><li><p>将主题目录下 <code>_config.yml</code> 修改 <code>localhost_search</code> 的属性 <code>enable</code> 为 <code>true</code></p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>在项目根目录下 <code>_config.yml</code> 添加一下代码</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure><h1 id="设置动态背景"><a href="#设置动态背景" class="headerlink" title="设置动态背景"></a>设置动态背景</h1><p>在主题配置文件中找到<strong>canvas_nest</strong>，设置成<strong>ture</strong></p><h1 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h1><ul><li><p>安装插件</p><p><code>cnpm install hexo-generator-feed --save</code></p></li><li><p>在项目根目录下 <code>_config.yml</code> 文件末添加 </p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span><br></pre></td></tr></table></figure><ul><li>配置主题<code>_config.yml</code>文件，<code>ctrl+f</code>搜索<code>rss</code>，在后面加上<code>/atom.xml</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><h1 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h1><p>在主题目录下配置 <code>_config.yml</code> 添加如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></span><br><span class="line"><span class="comment">#social:</span></span><br><span class="line">  <span class="comment">#LinkLabel: Link</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/halzhan</span></span><br><span class="line"><span class="attr">  Twitter:</span> <span class="attr">https://twitter.com/zoukeqing</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">gmailto:zoukeqing@gmail.com</span> <span class="string">or</span> <span class="attr">qqto:1146704412@qq.com</span></span><br></pre></td></tr></table></figure><h1 id="最后的效果"><a href="#最后的效果" class="headerlink" title="最后的效果"></a>最后的效果</h1><p><img src="https://s1.ax1x.com/2018/09/11/ikFO1K.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h2 id=&quot;准备环境（NodeJS-Git&quot;&gt;&lt;a href=&quot;#准备环境（NodeJS-Git&quot; class=&quot;headerlink&quot; title=&quot;准备环境（NodeJS+Git)&quot;&gt;&lt;/a&gt;准备环境（NodeJS+Git)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nodejs.cn/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nodejs下载&lt;/a&gt;之后，安装路径建议换到除C盘以外的硬盘上，比如我安装在&lt;code&gt;D:\nodejs&lt;/code&gt;，其它的就默认next&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装结果输入命令测试结果，若出现版本则安装成功了。npm是NodeJS的包管理工具，可安装、卸载、更新、查看、搜索、发布等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;改变环境配置npm的全局模块的存放路径以及cache的路径，提前新建好文件，然后输入以下命令&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config set prefix &lt;span class=&quot;string&quot;&gt;&quot;D:\nodejs\Manual_setting\node_global&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config set cache &lt;span class=&quot;string&quot;&gt;&quot;D:\nodejs\Manual_setting\node_cache&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Github Pages" scheme="http://yoursite.com/categories/Github-Pages/"/>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github Pages" scheme="http://yoursite.com/tags/Github-Pages/"/>
    
  </entry>
  
  <entry>
    <title>begin</title>
    <link href="http://yoursite.com/2018/09/10/begin/"/>
    <id>http://yoursite.com/2018/09/10/begin/</id>
    <published>2018-09-10T07:50:57.000Z</published>
    <updated>2018-09-11T02:56:38.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开始写作&quot;&gt;&lt;a href=&quot;#开始写作&quot; class=&quot;headerlink&quot; title=&quot;开始写作&quot;&gt;&lt;/a&gt;开始写作&lt;/h1&gt;
      
    
    </summary>
    
      <category term="开始吧" scheme="http://yoursite.com/categories/%E5%BC%80%E5%A7%8B%E5%90%A7/"/>
    
    
      <category term="begin" scheme="http://yoursite.com/tags/begin/"/>
    
  </entry>
  
</feed>
